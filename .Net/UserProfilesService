  public class UserProfileService : IUserProfileService
    {
        private IDataProvider _dataProvider;


        public UserProfileService(IDataProvider dataProvider)
        {
            _dataProvider = dataProvider;
        }

        public int AddProfile(UserProfileAddRequest model, int userId)
        {
            int id = 0;

            _dataProvider.ExecuteNonQuery("dbo.UserProfiles_Insert", inputParamMapper: delegate (SqlParameterCollection parms)
            {
                SqlParameter parm = new SqlParameter();
                parm.ParameterName = "@Id";
                parm.SqlDbType = SqlDbType.Int;
                parm.Direction = ParameterDirection.Output;
                parms.Add(parm);

                parms.AddWithValue("@UserId", userId);
                parms.AddWithValue("@FirstName", model.FirstName);
                parms.AddWithValue("@LastName", model.LastName);
                parms.AddWithValue("@Bio", model.Bio ?? SqlString.Null);
                parms.AddWithValue("@AvatarUrl", model.AvatarUrl ?? SqlString.Null);
                parms.AddWithValue("@Phone", model.Phone);
                parms.AddWithValue("@RaceEthnicityId", model.RaceEthnicityId ?? SqlInt32.Null);
                parms.AddWithValue("@EducationLevelId", model.EducationLevelId ?? SqlInt32.Null);
                parms.AddWithValue("@HouseIncome", model.HouseIncome);
                parms.AddWithValue("@YearsInBusiness", model.YearsInBusiness ?? SqlInt32.Null);
                parms.AddWithValue("@Zip", model.Zip);

            }, returnParameters: delegate (SqlParameterCollection parms)
             {
                 Int32.TryParse(parms["@Id"].Value.ToString(), out id);
             });
            return id;
        }

        public void Update(UserProfileUpdateRequest model)
        {
            _dataProvider.ExecuteNonQuery("dbo.UserProfiles_Update", inputParamMapper: delegate (SqlParameterCollection parms)
            {

                parms.AddWithValue("@Id", model.Id);
                parms.AddWithValue("@Bio", model.Bio ?? SqlString.Null); ;
                parms.AddWithValue("@AvatarUrl", model.AvatarUrl ?? SqlString.Null);
                parms.AddWithValue("@Phone", model.Phone);
                parms.AddWithValue("@RaceEthnicityId", model.RaceEthnicityId ?? SqlInt32.Null);
                parms.AddWithValue("@EducationLevelId", model.EducationLevelId ?? SqlInt32.Null);
                parms.AddWithValue("@HouseIncome", model.HouseIncome);
                parms.AddWithValue("@YearsInBusiness", model.YearsInBusiness ?? SqlInt32.Null);
                parms.AddWithValue("@FirstName", model.FirstName);
                parms.AddWithValue("@Lastname", model.LastName);
                parms.AddWithValue("@Zip", model.Zip);
            });
        }

        public UserProfile GetById(int id)
        {
            UserProfile model = null;

            _dataProvider.ExecuteCmd("dbo.UserProfiles_SelectById_Join", 
                inputParamMapper: delegate (SqlParameterCollection parms)
            {
                parms.AddWithValue("@Id", id);
            }, singleRecordMapper: delegate (IDataReader reader, short set)
           {
               model = UserProfileMapper(reader);

           });

            return model;
        }

        public UserProfile GetByUserId(int userId)
        {
            UserProfile model = null;

            _dataProvider.ExecuteCmd("dbo.UserProfiles_SelectByUserId_Join_V2",
                inputParamMapper: delegate (SqlParameterCollection parms)
                {
                    parms.AddWithValue("@UserId", userId);
                }, singleRecordMapper: delegate (IDataReader reader, short set)
                {
                    model = UserProfileWithStatusMapper(reader);

                });

            return model;
        }
    }
